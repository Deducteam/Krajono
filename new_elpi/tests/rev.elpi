% X10:
%   yap                                     0.027s
%   elpi                                    3.771s
%   one level index hashtbl                 0.528s
%   two level inefficient index             0.681s
%   one level index hashtbl + automatic GC  0.899s
%   one lvl hashtbl + flat + automatic GC   0.763s
%   one lvl hashtbl + flat                  0.629s


% X13:
%   yap                          0.083s
%   elpi                        10.068s
%   one level index hashtbl      3.90s
%   two level inefficient index  4.48s

% X14:
%   ocamlopt                     0.014s
%   ocamlc                       0.024s
%   yap                          0.033s
%   elpi                         stack overflow after 20.893s
%   no index                     4.59s
%   one level index hashtbl      2.30s
%   two level inefficient index  2.34s
%   one level hashtbl + auto GC  3.39s
%   one lvl hash+flat+ auto GC   3.38s
%   one lvl hashtbl + flat       2.59s
%   one lvl hash+ flat + man GC  2.76s
%   one lvl index map main       2.33s  
%I  one lvl hashtbl              0.63s
%   no index + term              4.38s

rev L RL  :- aux L xnil  RL .
aux xnil  L  L .
aux (xcons X XS)  ACC  R :- aux XS (xcons X ACC) R . 

append xnil L L .
append (xcons X XS) L (xcons X L1)  :- append XS L L1 .

main :-
    X1 =  (xcons x1 (xcons x2 (xcons x3 (xcons x4 (xcons x5 (xcons x6 (xcons x7 (xcons x8 (xcons x9 (xcons x10 xnil)))))))))),
   append X1 X1 X2  ,
   append X2 X2 X3  ,
   append X3 X3 X4  ,
   append X4 X4 X5  ,
   append X5 X5 X6  ,
   append X6 X6 X7  ,
   append X7 X7 X8  ,
   append X8 X8 X9  ,
   append X9 X9 X10  ,
   append X10 X10 X11  ,
   append X11 X11 X12  ,
   append X12 X12 X13  ,
   append X13 X13 X14  ,
   % append X14 X14 X15  ,
   % append X15 X15 X16  ,
   % append X16 X16 X17  ,
   % append X17 X17 X18  ,
   X = X14 ,
   rev X  Y,   rev Y Z,  X = Z.
