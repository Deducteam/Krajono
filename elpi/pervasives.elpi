%%%%%%%%%%%%%%%%%% PREDICATES NOT IMPLEMENTED IN TEYJUS %%%%%%%%%%%%%%%%%%%%%%%

%open_socket
%time

%%%%%%%%%%%%%%%%%%%%% PREDICATES NOT IMPLEMENTED YET %%%%%%%%%%%%%%%%%%%%%%%%%%

%read
%readterm
%solve

%i~
%iabs
%i+
%i-
%i*
%i<
%i>
%i<=
%i>=

%r~
%rabs
%r+
%r-
%r*
%r<
%r>
%r<=
%r>=

%s<
%s>
%s<=
%s>=

%%%%%%%%%%%%%%%%%% DECLARATION OF CUSTOM PREDICATES %%%%%%%%%%%%%%%%%%%%%%%%%%%

% nofixity !
% nofixity sigma
% nofixity pi
% nofixity true
% nofixity fail

% nofixity nil

% nofixity abs
% nofixity int_to_real
% nofixity sqrt
% nofixity sin
% nofixity cos
% nofixity arctan
% nofixity ln
% nofixity floor
% nofixity ceil
% nofixity truncate
% nofixity size
% nofixity chr
% nofixity string_to_int
% nofixity substring
% nofixity real_to_string
% nofixity int_to_string
% nofixity std_in
% nofixity std_out
% nofixity std_err

% nofixity $print
% nofixity $lt


prefix ~  256.
infixl mod 160.
infixl div 160.
infixl *  160.
infixl /  160.
infixl ^  150.
infixl +  150.
infixl -  150.
infixr :: 140.
infix  >  130.
infix  <  130.
infix  >= 130.
infix  =< 130.
infix  =  130.
infix  is 130.
infixr => 129.
infixr &  120.
infixr ,  110.
infixr ;  100.
infixl :- 0.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% CUSTOM PREDICATES %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

X < Y  :- $lt_ X Y.
X > Y  :- $gt_ X Y.
X =< Y :- $le_ X Y.
X >= Y :- $ge_ X Y.

getenv X Y :- $getenv X Y.
system X Y :- $system X Y.
X is Y :- $is X Y.
open_in X Y :- $open_in X Y.
open_out X Y :- $open_out X Y.
open_append X Y :- $open_append X Y.
open_string X Y :- $open_string X Y.
close_in X :- $close_in X.
close_out X :- $close_out X.
output X Y :- $output X Y.
term_to_string X Y :- $term_to_string X Y.
string_to_term X Y :- $string_to_term X Y.
flush X :- $flush X.
halt :- $halt.
input X Y Z :- $input X Y Z.
input_line X Y :- $input_line X Y.
lookahead X Y :- $lookahead X Y.
eof X :- $eof X.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PREDEFINED PREDICATES %%%%%%%%%%%%%%%%%%%%%%%

true.

X = X.

(A ; B) :- A.
(A ; B) :- B.

not X :- X, !, fail.
not X.

printterm S T :- term_to_string T T', output S T'.

print S :- output std_out S.

stop :- halt.
