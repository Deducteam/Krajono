mode (term i).

term (app X Y) :- term X, term Y.
term (lam F) :- pi x\ term (y\y) => term x => term (F x).
term (?? as X) :- $constraint (term X) X.

constraint term {
  rule (G1 ?- term (?? X LX)) \ (G2 ?- term (?? Y LY)) > LX ~ LY | (X = Y, G1 = G2).
     % <=> true.
}

main :- pi x\
           crap x => term (app (lam w\ X w) Y),
           pi y\
             term (app (lam w\ X w) Y).
  
