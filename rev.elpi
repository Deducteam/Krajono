rev L RL  :- $with-gc[aux L []  RL , [L,RL]].
%aux [X|XS]  ACC  R :- !, aux XS [X|ACC] R, $erase XS, $erase ACC, $erase X, $erase R . 

aux [X|XS]  ACC  R :- !, $with-gc[aux XS [X|ACC] R, [X,XS,ACC,R]]. 
aux []  L  L :- $erase L.
% rev L RL :- (@f L) = (RL f@).

true.

append [X|XS] L R  :- !,
  $with-gc[append XS L L1, [XS,L]], R=[X|L1], $with-gc[true, [X,R,L1]].
append [] L L :- $erase L.


main W :-
  X1 = [x1,x2,x3,x4,x5,x6,x7,x8,x9,x10],
  append X1 X1 X2 ,
  append X2 X2 X3  ,
  append X3 X3 X4  ,
  append X4 X4 X5  ,
  append X5 X5 X6  ,
  append X6 X6 X7  ,
  append X7 X7 X8  ,
  append X8 X8 X9  ,
  append X9 X9 X10  ,  
  append X10 X10 X11  ,
 % append X11 X11 X12  ,
 % append X12 X12 X13  ,
 %  append X13 X13 X14  ,
 %  append X14 X14 X15  ,
 %  append X15 X15 X16  ,
 %  append X16 X16 X17  ,
 %  append X17 X17 X18  ,
  Init = X11,
  $with-gc[true, [X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11]],
           rev Init Y2, 
  $gc [],
  $with-gc[rev Y2 Y3, [Y2]],
  $gc [],
  $with-gc[rev Y3 Y4, [Y3]],
  $gc [],
  $with-gc[rev Y4 Y5, [Y4]],  
  $gc [],
  $with-gc[rev Y5 Y6, [Y5]],
  $gc [],
  $with-gc[rev Y6 Y7, [Y6]],  
  Init=Y7.

