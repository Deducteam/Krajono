% succ issued by PTS_typing %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% mode (succ i o).

% meta: ??
% succ (?? as S1) S2 :- $constraint (succ S1 S2) [S1].

% when the meta gets e value, we check universe levels
% the cuts rule out the clauses of PTS_cic
% succ (s+type U1) (s+type U2) :- llt U1 U2, !.
% succ (s+cprop U1) (s+type U2) :- llt U1 U2, !.

% max issued by PTS_typing %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% mode (max i i o).

% meta, meta: ??
% max (?? as S1) (?? as S2) S3 :- !, $constraint (max S1 S2 S3) [S1, S2].

% meta can be cprop or type: ??
% max (?? as S1) (s+type U2) (s+type U3) :- !, $constraint (max S1 (s+type U2) (s+type U3)) [S1].
% max (?? as S1) (s+cprop U2) (s+cprop U3) :- !, $constraint (max S1 (s+type U2) (s+cprop U3)) [S1].

% this case is in PTS_cic
% max _ s+prop s+prop :- !.

% meta can be prop, cprop, or type: ??.
% max (s+type U1) (?? as S2) S3 :- $constraint (max (s+type U1) S2 S3) [S2].
% max (s+cprop U1) (?? as S2) S3 :- $constraint (max (s+cprop U1) S2 S3) [S2].

% when metas get e value, we check universe levels
% the cuts rule out the clauses of PTS_cic
% max (s+type U1) (s+type U2) (s+type U3) :- lle U1 U3, lle U2 U3, !.
% max (s+cprop U1) (s+type U2) (s+type U3) :- lle U1 U3, lle U2 U3, !.
% max (s+type U1) (s+cprop U2) (s+cprop U3) :- lle U1 U3, lle U2 U3, !.
% max (s+cprop U1) (s+cprop U2) (s+cprop U3) :- lle U1 U3, lle U2 U3, !.
% max s+prop S S :- !.
