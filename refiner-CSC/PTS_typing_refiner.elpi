%% To be accumulated *before* PTS_typing to turn the kernel into a refiner

type hole term.
type vect term.

mode (of3 i o o).
of3 (?? as K) T K :- !, $constraint (of3 K T K) [K].

of3 hole U RT :- !, of3 T U RT.

of3 (app M vect) TM RM :- of3 M TM RM.

% could be optimized
of3 (app M vect) U RT :-
  of3 M TM RM, ifelse (is_flex TM) fail (of3 (app (app RM hole) vect) U RT).

constraint of3 val {
  rule (G1 ?- of3 (?? as X1) T1 _) \ (G2 ?- of3 (?? as X2) T2 _) > X1 = X2
    | ($match_frozen X1 _ L1, $match_frozen X2 _ L2, is_canonical L1, compat G1 L1 T1 G2 L2 T2 L3) <=> L3.
}

is_canonical [].
is_canonical [X|XS] :- $is_name X, not (mem XS X), is_canonical XS.

% (G2 ?- T2) is the canonical one
compat G2 [] T2 G1 [] T1 H :- append G1 G2 G12, H = (G12 => conv T2 T1).

compat G2 [X2|XS2] T2 G1 [X1|XS1] T1 K :-
 H1 = (G1 => of3 X1 U1 R1),
 H2 = (G2 => of3 X2 U2 R2),
 append G1 G2 G12, H3 = (G12 => conv U1 U2),
 compat G1 XS1 T1 [val X2 U2 R1 _NF|G2] XS2 T2 K2,
 K = (H1, H2, H3, K2).
