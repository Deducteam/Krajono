% Interface with Matita ITP

% implementation of the queries to the environment %%%%%%%%%%%%%%%%%%%%%%%%%%%

accumulate environment_matita.

% traces %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

of3 M _ _ :- $print "?? of3" M, fail.

approx T V W :- $print "?? approx" T "as" V ":" W, at_end.

approx_cast T U V :- $print "?? approx cast" T ":" U "as" V, at_end.

% implementation of the queries from the environment %%%%%%%%%%%%%%%%%%%%%%%%%

has_type T U :- of3 T U' _, of3 U _ RU, sub U' RU.

is_type U :- of3 U S' _, match_sort S' _S.

approx T V W :- print "*", of3 T U' RT, $print "** of3" T ":" U' "~" RT, U' = W, RT = V, !.

approx_cast T U V :- $print "AC1" T, of3 T U' RT, $print "AC2" U' "#" RT, of3 U _ RU, $print "*3 sub" U "~" RU, sub U' RU, RT = V, !.

of3 X W X :- ldec X W.

val X W V NF :- ldef X W V.

% fall back %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

ldecs :- ldec X W, $print X ":" W, fail.

ldefs :- ldef X W V, $print X ":" W "=" V, fail.

at_end :- $print "context", (ldecs; ldefs).

approx T V W :- $print "KO approx" T "as" V ":" W, at_end.

approx_cast T U V :- $print "KO approx cast" T ":" U "as" V, at_end.
